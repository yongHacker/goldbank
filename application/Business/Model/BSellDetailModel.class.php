<?php
namespace Business\Model;
use Business\Model\BCommonModel;
class BSellDetailModel extends BCommonModel{
    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->bproduct_model=D("BProduct");
    }
    public function getList_detail($sell_id){
        if($sell_id){
            $condition=array("sell_id"=>$sell_id,'bselldetail.deleted'=>0);
        }else{
            $condition="";
        }
        $join="left join ".DB_PRE."b_product bproduct on bproduct.id=bselldetail.product_id";
        $join.=$this->bproduct_model->get_product_join_str();
        $field="bselldetail.*,bselldetail.sell_fee detail_sell_fee,bproduct.type,bproduct.product_code,bproduct.sub_product_code,bproduct.goods_id";
        $field.=$this->bproduct_model->get_product_field_str(3);
        $detail_data=$this->alias("bselldetail")->getList($condition,$field,$limit="",$join,$order='bselldetail.id desc');
        foreach($detail_data as $k=>$v){
            $detail_data[$k]["product_detail"]=strip_tags($this->bproduct_model->get_product_detail_html($v));
            $detail_data[$k]["product_pic"]=$this->bproduct_model->get_goods_pic($v['photo_switch'],$v['goods_id'],$v['product_id']);
            $common_data=$this->bproduct_model->get_product_common_data($v);
            $detail_data[$k]["p_gold_weight"]=$common_data["p_gold_weight"]===''?"--":$common_data["p_gold_weight"];
            $detail_data[$k]["p_total_weight"]=$common_data["p_total_weight"]===''?"--":$common_data["p_total_weight"];
        }
        return $detail_data;
    }
    //暂时用于生命周期
    public function new_getList_detail($where){
        $condition=array("bselldetail.deleted"=>0);
        if($where){
            $condition=array_merge($condition,$where);
        }
        $join="left join ".DB_PRE."b_product bproduct on bproduct.id=bselldetail.product_id";
        $join.=" left join ".DB_PRE."b_sell bsell on bsell.id=bselldetail.sell_id";
        $join.=$this->bproduct_model->get_product_join_str();
        $join.=" left join ".DB_PRE."b_employee  create_musers on create_musers.user_id=bsell.creator_id and create_musers.deleted=0 and create_musers.company_id=bsell.company_id";
        $join.=" left join ".DB_PRE."b_employee  check_musers on check_musers.user_id=bsell.check_id  and check_musers.deleted=0 and check_musers.company_id=bsell.company_id";
        $join.=" left join ".DB_PRE."b_employee  buy_musers on buy_musers.user_id=bsell.buyer_id  and buy_musers.deleted=0 and buy_musers.company_id=bsell.company_id";
        $join.=" left join ".DB_PRE."b_shop b_shop on b_shop.id=bsell.shop_id";
        $join.=" left join ".DB_PRE."b_client b_client on b_client.id=bsell.client_id";
        $field="bsell.*";
        $field.=",create_musers.employee_name user_nicename,check_musers.employee_name check_name,b_client.client_name buy_name,b_shop.shop_name";
        //$field.=$this->bproduct_model->get_product_field_str(2);
        $detail_data=$this->alias("bselldetail")->getList($condition,$field,$limit="",$join,$order='bselldetail.id desc');
        return $detail_data;
    }
    function insert($insert) {
        $insert["company_id"]=get_company_id();
        return parent::insert($insert); // TODO: Change the autogenerated stub
    }

    /**
     * 根据http传输条件获取货品详情 用于销售退货获取货品列表
     * @param  boolean $limit       计算行数/分页limit false-计算行数 other-获取列表
     * @param  integer $sell_ids    销售id数组
     * @param  array   $include_ids 本单包含的销售详情id
     * @return array   $detail_data 销售详情
     */
    public function getListDetailByPost($limit = false, $sell_ids = array(), $include_ids = array())
    {
        $condition = array(
            'bsell.status' => 1,
            'bsell.deleted' => 0,
            'bsell.company_id' => get_company_id(),
            'bselldetail.deleted' => 0,
            'bselldetail.status' => 1
        );
        if ($_REQUEST['client_id']) {
            $condition['bsell.client_id'] = I('request.client_id/d', 0);
        }
        if (isset($_REQUEST['shop_id'])) {
            $condition['bsell.shop_id'] = I('request.shop_id/d', 0);
        }
        if ($sell_ids) {
            $condition['bsell.id'] = array('in', $sell_ids);
        }
        if (I('request.search/s', '')) {
            $condition['bgoods.goods_name|bgoods.goods_code|bproduct.product_code'] = array('like', '%' . I('request.search/s', '') . '%');
        }

        $field = 'bselldetail.*,bselldetail.sell_fee detail_sell_fee,bproduct.type,bproduct.product_code,bproduct.sub_product_code,bproduct.goods_id';
        $field .= $this->bproduct_model->get_product_field_str(3);
        $join = 'LEFT JOIN __B_SELL__ bsell ON bsell.id = bselldetail.sell_id';
        $join .= ' LEFT JOIN __B_PRODUCT__ bproduct ON bproduct.id = bselldetail.product_id AND bproduct.status = 6';
        $join .= $this->bproduct_model->get_product_join_str();
        $order = 'bselldetail.id desc';

        if ($limit === false) {
            $count = $this->alias('bselldetail')->countList($condition, $field, $join, $order);
            return $count;
        }
        
        $detail_data = $this->alias('bselldetail')->getList($condition, $field, $limit, $join, $order);

        foreach($detail_data as $k => $v){
            if (!empty($include_ids)) {
                if ($v['status'] == '2' && !in_array($v['id'], $include_ids)) {
                    unset($detail_data[$k]);
                    break;
                }
            }
            $detail_data[$k]['product_detail'] = strip_tags($this->bproduct_model->get_product_detail_html($v));
            $detail_data[$k]['product_pic'] = $this->bproduct_model->get_goods_pic($v['photo_switch'],$v['goods_id'],$v['product_id']);
            $common_data = $this->bproduct_model->get_product_common_data($v);
            $detail_data[$k]['p_gold_weight'] = $common_data['p_gold_weight'] === '' ? '--' : $common_data['p_gold_weight'];
            $detail_data[$k]['p_total_weight'] = $common_data['p_total_weight'] === '' ? '--' : $common_data['p_total_weight'];
        }
        return $detail_data;
    }
}
