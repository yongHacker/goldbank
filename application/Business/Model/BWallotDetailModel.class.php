<?php
namespace Business\Model;
use Business\Model\BCommonModel;
class BWallotDetailModel extends BCommonModel{
    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->bwgoods_model=D("BWgoods");
    }
    //自动验证
    protected $_validate = array(
        //array(验证字段,验证规则,错误提示,验证条件,附加规则,验证时间)
       // array('sector_id', 'require', '部门不能为空！', 1, 'regex', BCommonModel:: MODEL_BOTH ),
    );
    //自动完成
    protected $_auto = array(
        //array(填充字段,填充内容,填充条件,附加规则)
    );
    //通过调拨单id获取调拨明细与其详细信息
    public function getList_detail($allot_id){
        if($allot_id){
            $condition=array("wallot_id"=>$allot_id,"bwallotdetail.deleted"=>0);
        }else{
            $condition=array("bwallotdetail.deleted"=>0);;
        }
        $join=" left join ".DB_PRE."b_wgoods bwgoods on bwgoods.id=bwallotdetail.goods_id";
        $join.=" left join ".DB_PRE."b_wgoods_stock bwgoodsstock on bwgoodsstock.id=bwallotdetail.wgoods_stock_id";
        $field="bwallotdetail.*,bwgoods.goods_code,bwgoods.goods_name,bwgoods.goods_spec,bwgoods.sell_pricemode,";
        $field.="bwgoods.goods_unit,bwgoodsstock.goods_stock+bwallotdetail.goods_stock num_stock,bwgoodsstock.warehouse_id";
        $detail_data=$this->alias("bwallotdetail")->getList($condition,$field,$limit="",$join,$order='bwallotdetail.id desc');
        foreach($detail_data as $k=>$v){
            $detail_data[$k]["product_pic"]=$this->bwgoods_model->get_goods_pic($v['goods_id']);
        }
        return $detail_data;
    }
    // 删除调拨明细的单条调拨信息与货品，货品状态还原为在库
    public function detail_delete()
    {
        // 删除调拨明细的一条数据
        $wallot_id = I("post.allocationid",0);
        $id = I("post.id",0);
        $wgoods_stock_id = I("post.wgoods_stock_id",0);
        $map["id"] = $id;
        $map["wallot_id"] = $wallot_id;
        $map["wgoods_stock_id"] = $wgoods_stock_id;
        $allocations_detail["deleted"] = 2;
        M()->startTrans();
        $detail =$this->update($map,$allocations_detail);
        $detail_data =$this->getInfo($map);
        // 还原商品库存
        $condition["id"] = $wgoods_stock_id;
        $old_stock=M("BWgoodsStock")->lock(true)->where($condition)->find();
        $data=array();
        $data['goods_stock']=bcadd($old_stock['goods_stock'],$detail_data['goods_stock'],4);
        $data['outcome_stock']=bcsub($old_stock['outcome_stock'],$detail_data['goods_stock'],4);
        $stock = D("BWgoodsStock")->update($condition,$data);
        if ($detail && $stock) {
            M()->commit();
            $error["status"] = 1;
            $error["msg"] = "成功";
            $error["id"] = $id;
        } else {
            M()->rollback();
            $error["status"] = 0;
            $error["msg"] = "订单无法修改";
            $error["id"] = $id."//".$wallot_id."//".$detail."//".$stock;
        }
        return $error;
    }
}
