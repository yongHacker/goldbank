<?php
namespace Business\Model;
use Business\Model\BCommonModel;
class BWholesaleProcureModel extends BCommonModel{
    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //自动验证
    protected $_validate = array(
        //array(验证字段,验证规则,错误提示,验证条件,附加规则,验证时间)
       // array('sector_id', 'require', '部门不能为空！', 1, 'regex', BCommonModel:: MODEL_BOTH ),
    );
    //自动完成
    protected $_auto = array(
        //array(填充字段,填充内容,填充条件,附加规则)
    );
    //获取添加采购单的采购数据
    public function get_insert_data(){
        $postdata = I('post.order');
        $nowtime = time();
        $insert_data = array(
            'company_id'=> get_company_id(),
            'procure_time'=> isset($postdata['procure_time']) ? strtotime($postdata['procure_time']) : $nowtime,
            'supplier_id'=> $postdata['supplier_id'],
            'creator_id'=> get_user_id(),
            'create_time'=> $nowtime,
            'memo'=> $postdata['memo'],
            'num'=> $postdata['count'],
            'type'=> $postdata['type'],
            'pricemode'=> $postdata['pricemode'],
            'batch'=> b_order_number('BWholesaleProcure', 'batch'),
            'extra_pic'=> $postdata['bill_pic_2'],
            'bill_pic'=> $postdata['bill_pic'],
            'price'=> decimalsformat($postdata['price'], 2),
            'status'=>$postdata['status']=="save"?-1:0
        );
        return $insert_data;
    }
    public function add_post(){
        $postArray =I("order_detail");
        M()->startTrans();
        foreach($postArray as $k =>$val){
            $product_ids[]=$val['id'];
            if(empty($val['num_stock'])){
                M()->rollback();
                $arr['status'] =0;
                $arr['msg']='第' . ++ $k . '行商品，采购量不能为空！';
                return $arr;
            }

        }
        
        $param=$this->get_insert_data();
        $wprocure_id =$this->insert($param);
        $li2=$this->add_wprocure_detail($postArray,$wprocure_id);
        if($wprocure_id!==false&&$li2!==false){
            M()->commit();
            S('session_menu' . get_current_admin_id(), null);
            $arr['status'] =1;
            $arr['url'] =U("BWholesaleProcure/index");
        }else{
            M()->rollback();
            $arr['status'] =0;
            $arr['msg']='添加失败！';
            $arr['test']=$wprocure_id."//".$li2."//";
        }
        return $arr;
    }

    public function edit_post(){
        $postArray =I("order_detail");
        M()->startTrans();
        foreach($postArray as $k =>$val){
            $product_ids[]=$val['id'];
            if(empty($val['num_stock'])){
                M()->rollback();
                $arr['status'] =0;
                $arr['msg']='第' . ++ $k . '行商品，采购量不能为空！';
                return $arr;
            }

        }

        $param=$this->get_insert_data();
        $wprocure_id =$this->insert($param);
        $li2=$this->add_wprocure_detail($postArray,$wprocure_id);
        if($wprocure_id!==false&&$li2!==false){
            M()->commit();
            S('session_menu' . get_current_admin_id(), null);
            $arr['status'] =1;
            $arr['url'] =U("BWholesaleProcure/index");
        }else{
            M()->rollback();
            $arr['status'] =0;
            $arr['msg']='添加失败！';
            $arr['test']=$wprocure_id."//".$li2."//";
        }
        return $arr;
    }
    //添加采购明细
    public function add_wprocure_detail($postArray,$wprocure_id,$rate){
        $wprocure_details=array();
        foreach($postArray as $k2=>$v){
            //采购明细写入
            $wprocure_detail["procure_id"]=$wprocure_id;//订单id
            $wprocure_detail["wgoods_id"]=$v['id'];//货品id
            $wprocure_detail['goods_stock']=$v['num_stock'];
            $wprocure_detail['price']=(float)$v['total_price'];//实质采购总价
            $wprocure_detail["procure_price"]=$v['procure_price'];//采购单价
            $wprocure_details[]=$wprocure_detail;
        }
        $li2 = D("b_wprocure_detail")->addAll($wprocure_details);
        return $li2;
    }
    //获取一条采购的所有信息
    public function getInfo_detail(){
        $condition=array("bwprocure.company_id"=>get_company_id(),"bwprocure.deleted"=>0,"bwprocure.id"=>I("get.id",0,"intval"));
        $join=" left join ".DB_PRE."b_supplier bsupplier  on bsupplier.id=bwprocure.supplier_id";
        $join.=" left join ".DB_PRE."m_users check_musers on check_musers.id=bwprocure.check_id";
        $join.=" left join ".DB_PRE."m_users creator_musers on creator_musers.id=bwprocure.creator_id";
        $field="bwprocure.*";
        $field.=",bsupplier.company_name,check_musers.user_nicename check_name,creator_musers.user_nicename creator_name";
        $bwprocure_data=$this->alias("bwprocure")->getInfo($condition,$field,$join,$order='bwprocure.id desc');
        $bwprocure_data['count']=D("b_wprocure_detail")->countList($condition=array("deleted"=>0,"procure_id"=>$bwprocure_data["id"]));
        return $bwprocure_data;
    }
    // 获取对某供应商的采购单列表 - 结算
    public function get_list_by_supplier(){
        $main_tbl = DB_PRE.'b_wholesale_procure';

        $supplier_id = I('post.supplier_id/d', 0);

        $where = array (
            $main_tbl.'.supplier_id'=> $supplier_id,
            $main_tbl.'.status'=> 1,
            $main_tbl.'.procure_settle_id'=> 0,
            $main_tbl.'.company_id'=> get_company_id(),
            $main_tbl.'.deleted'=> 0
        );

        $field = $main_tbl.'.*';
        $field .= ', IF('.$main_tbl.'.pricemode, "计重", "计件")as show_pricemode';
        $field .= ', ifnull(cu.user_nicename,cu.mobile)as creator_name';
        $field .= ', (CASE '.$main_tbl.'.status
			WHEN 0 THEN "待审核"
			WHEN 1 THEN "审核通过"
			WHEN 2 THEN "审核不通过"
			WHEN 3 THEN "已撤销"
			ELSE "已结算" END
		)as show_status';

        $join = ' LEFT JOIN '.C('DB_PREFIX').'m_users as cu ON (cu.id = '.$main_tbl.'.creator_id)';
/*
        $sub = D('BProcureStorage')->field('procurement_id, SUM(price) as total_fee_price')->group('procurement_id')->select(false);
        $join .= ' LEFT JOIN ('.$sub.')as s1 ON (s1.procurement_id = '.$main_tbl.'.id)';*/
        $datalist = $this->getList($where, $field, null, $join);
        foreach($datalist as $k=>$v){
            if($v['pricemode']==1){
                $datalist[$k]["weight"]=D('BWprocureDetail')->where(array('procure_id'=>$v['id'],'deleted'=>0))->sum("goods_stock");
                $datalist[$k]["total_fee_price"]=0;
            }else{
                $datalist[$k]["weight"]=0;
                $datalist[$k]["total_fee_price"]=$v['price'];
            }
        }
        return $datalist;
    }
    // 导出 excel
    /**
     * @param $excel_where
     * @param string $excel_field
     * @param string $excel_join
     * @param int $page
     * @param string $action
     */
    public function excel_out($excel_where, $excel_field='', $excel_join='', $page = 1,$action='excel_out'){
        set_time_limit(0);
        $limit = (($page - 1) * intval(500)) . "," . (intval(500));
        $condition=array();
        $condition ["table"] = DB_PRE.'b_wholesale_procure';
        $condition ["field"] = 'status';
        $status_list = D ( 'b_status' )->getFieldValue($condition);
        $join=" left join ".DB_PRE."b_supplier bsupplier  on bsupplier.id=bwprocure.supplier_id";
        $join.=" left join ".DB_PRE."m_users check_musers on check_musers.id=bwprocure.check_id";
        $join.=" left join ".DB_PRE."m_users creator_musers on creator_musers.id=bwprocure.creator_id";
        $field="bwprocure.*";
        $field.=",bsupplier.company_name,check_musers.user_nicename check_name,creator_musers.user_nicename creator_name";
        $field=empty($excel_field)?$field:$excel_field;
        $join=empty($excel_join)?$join:$excel_join;
        $data=$this->alias("bwprocure")->getList($excel_where,$field,$limit,$join,$order='bwprocure.id desc');
        if($data){
            $expotdata=array();
            foreach($data as $k=>$v){
                $expotdata[$k]['id'] = $k + 1 + ($page - 1) * intval(500);
                $expotdata[$k]['batch'] = $v['batch'];
                $expotdata[$k]['creator_name'] = $v['creator_name'];
                $expotdata[$k]['company_name'] = $v['company_name'];
                $expotdata[$k]['price'] = $v['price'];
                $expotdata[$k]['count'] =D('BWprocureDetail')->countList($condition=array("deleted"=>0,"procure_id"=>$v["id"]));
                $expotdata[$k]['procure_time'] = empty($v['procure_time'])?'':date('Y-m-d H:i:s',$v['procure_time']);
                $expotdata[$k]['create_time'] = date('Y-m-d H:i:s',$v['create_time']);
                $expotdata[$k]['status'] = $status_list[$v['status']];
            }
            register_shutdown_function(array(&$this, $action),$excel_where,$excel_field, $excel_join, $page + 1);
            $title=array('序','单号','采购员','批发商','采购总价','数量','采购时间','制单时间','状态');
            exportexcel($expotdata,$title,"批发采购记录列表");
        }
    }

}
