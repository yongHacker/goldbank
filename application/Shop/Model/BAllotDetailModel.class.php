<?php
namespace Shop\Model;
use Shop\Model\BCommonModel;
class BAllotDetailModel extends BCommonModel{
    public function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->bproduct_model=D("BProduct");
    }
    //通过调拨单id获取调拨明细与其详细信息
    public function getList_detail($where){
        $condition=array("ballotdetail.deleted"=>0);
        if($where){
            $condition=array_merge($condition,$where);
        }
        $join="left join ".DB_PRE."b_product bproduct on bproduct.id=ballotdetail.p_id";
        $join.=$this->bproduct_model->get_product_join_str();
        $field="ballotdetail.*,bproduct.type,bproduct.product_code,bproduct.goods_id";
        $field.=$this->bproduct_model->get_product_field_str(3);
        $detail_data=$this->alias("ballotdetail")->getList($condition,$field,$limit="",$join,$order='ballotdetail.id desc');
        foreach($detail_data as $k=>$v){
            $detail_data[$k]["product_detail"]=strip_tags($this->bproduct_model->get_product_detail_html($v));
            $detail_data[$k]["product_pic"]=$this->bproduct_model->get_goods_pic($v['photo_switch'],$v['goods_id'],$v['product_id']);
            $common_data=$this->bproduct_model->get_product_common_data($v);
            $detail_data[$k]["p_gold_weight"]=$common_data["p_gold_weight"]===''?"--":$common_data["p_gold_weight"];
            $detail_data[$k]["p_total_weight"]=$common_data["p_total_weight"]===''?"--":$common_data["p_total_weight"];
        }
        return $detail_data;
    }
    // 删除调拨明细的单条调拨信息与货品，货品状态还原为在库
    public function detail_delete()
    {
        // 删除调拨明细的一条数据
        $orderid = I("post.allocationid",0);
        $id = I("post.id",0);
        $p_id = I("post.p_id",0);
        $map["id"] = $id;
        $map["allot_id"] = $orderid;
        $condition["id"] = $orderid;
        $condition["deleted"] = 0;
        $condition["creator_id"] = get_user_id();
        $condition['status']=array("in",array(-1,2,3,4,6));
        $allocations = $this->getInfo($map);
        if (empty($allocations)) {
            $error["status"] = 0;
            $error["msg"] = "无法删除";
            return $error;
        }
        $allocations_detail["deleted"] = 2;
        M()->startTrans();
        $detail =$this->update($map,$allocations_detail);
        if ($detail) {
            M()->commit();
            $error["status"] = 1;
            $error["msg"] = "成功";
            $error["id"] = $id;
        } else {
            M()->rollback();
            $error["status"] = 0;
            $error["msg"] = "订单无法修改";
            $error["id"] = $id."//".$orderid."//".$detail;
        }
        return $error;
    }
}
